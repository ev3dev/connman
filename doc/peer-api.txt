Peer hierarchy [EXPERIMENTAL]
=============================

Service		net.connman
Interface	net.connman.Peer
Object path	[variable prefix]/{peer0,peer1,...}

Methods		dict GetProperties() [deprecated]

			Returns properties for the peer object. See the
			properties sections for available properties.

			Usage of this method is highly discouraged. Use
			the Manager.GetPeers() method instead.

			Possible Errors: [service].Error.InvalidArguments

		void Connect() [experimental]

			Connect this peer.

			This method call will only return in case of an error
			or when the peer is fully connected. So setting a
			longer D-Bus timeout might be a really good idea.

			Possible Errors: [service].Error.InvalidArguments

		void Disconnect() [experimental]

			Disconnect this peer. If the peer is not connected, an
			error message will be generated.

			Possible Errors: [service].Error.InvalidArguments

Signals		PropertyChanged(string name, variant value) [experimental]

			This signal indicates a changed value of the given
			property.

Properties	string State [readonly] [experimental]

			The peer state information.

			Valid state are "idle", "failure", "association",
			"configuration", "ready" and "disconnect".

		string Name [readonly] [experimental]

			Name of the peer.

		dict IPv4 [readonly] [experimental]

			string Address [readonly]

				The current configured IPv4 address.

			string Netmask [readonly]

				The current configured IPv4 netmask.

		array{array{byte}} Services [readonly] [experimental]

			Array of P2P service specifications, which are
			themselves a TLV formated byte array.
